<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2Mh1w/xGsf8HEp/csEBnRrAAAAAASUVORK5CYII=
</value>
  </data>
</root>